# Generated by Django 4.0.3 on 2022-06-07 23:05

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('polls', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Ingredients',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ingredients_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Meals',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meals_name', models.CharField(max_length=200)),
                ('description', models.TextField(max_length=400)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review', models.CharField(max_length=200)),
                ('votes', models.IntegerField(default=0)),
                ('Meals', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.meals')),
            ],
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.DeleteModel(
            name='Choice',
        ),
        migrations.DeleteModel(
            name='Question',
        ),
        migrations.AddField(
            model_name='meals',
            name='Type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.type'),
        ),
        migrations.AddField(
            model_name='meals',
            name='ingredients',
            field=models.ManyToManyField(to='polls.ingredients'),
        ),
    ]
